! sum.f90 -> <nothing>   //its a comment!
program summation -> (module $summation
end program summation -> )

<???> -> (import "console" "logString (func $logString (parami32)))
<???> -> (import "console" "log" (func $log (param i32)))
<???> -> (import "console" "promptSync" (func $read (result i32)))
<???> -> (import "js" "mem" (memory 1))
<???> -> (func (export "main) <...?)

implicit none -> <nothing>            //disables implicit typing based on variable name!
integer::sum, a -> (local $sum i32) 
                    (local $a i32)

print *, -> i32.const 0
            i32.const 50
            call $logString
"This program performs summations. Enter 0 to stop." -> (data (i32.const 0) "This program performs summations. Enter 0 to stop.")
sum = 0 -> (local.set $sum (i32.const 0))

do -> (loop $sumloop
end do -> br $do)

print *, -> i32.const 50
            i32.const 4
            call $logString
"Add" -> (data (i32.const 50) "Add:")
read *, a -> (local.set $a (call $read))

if -> (if
end if -> )
(a==0) -> local.get $a
            i32.const 0
            i32.eq
then -> (then <...>)
exit -> (block $exit
        br $exit
        )
else -> (else <...>)
sum = sum + a ->  local.get $sum
                    local.get $a
                    i32.add
                    local.set $sum

print *, -> i32.const 54
            i32.const 11
            call $logString
"Summation =" -> (data (i32.const 54) "Summation =")
sum ->  local.get $sum
        call $log







